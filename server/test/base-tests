#!/bin/bash
#
# run this in top level install directory
#
test -d Tests || { echo 'Please run in top-level install directory'; exit 1; }

MODELDIR=`pwd`/Tests/Models
#
# Let python known where the modules are found:
PYTHONPATH=`pwd`/Src:`pwd`/lib/python; export PYTHONPATH
echo PYTHONPATH is $PYTHONPATH
#
echo "model directory? [$MODELDIR]"
read ANS
if [ z"$ANS" != z ]
then
	MODELDIR="$ANS"
fi

# if MODELDIR exists, offer to destroy it
if [ -d "$MODELDIR" ];
then
# destroy any existing models in the model directory
	echo "Remove models in '$MODELDIR'? [N]"
	read ANS
	if [ z$ANS == zY ]
	then
		rm -rf "$MODELDIR"
	fi
fi

# if MODELDIR was destroyed, or we never had one, create and
# populate it
if [ \( ! -e "$MODELDIR" \) -o \( ! -e "$MODELDIR"/Alice \) ];
then
	echo "Creating model 'Alice', username 'alice', password 'secret'"
	mkdir -p "$MODELDIR"
	rm -f output_* error_output*
	python Src/Utils/mkmodel.py Src/Modeldefs/user "$MODELDIR" Alice:alice:secret > output_alice 2> error_output_alice

#
# Check the files that have been made in the models directory
	du -a "$MODELDIR"

#
# Check the size of the output and error files
	ls -l output* 
	more output*
	ls -l error*
	more error*
fi

#
# Run the Base tests
test -s $HOME/.personis_server.conf || cp Src/personis_serverDEV.conf $HOME/.personis_server.conf
test -s $HOME/.personis.conf || cp Src/personisDEV.conf $HOME/.personis.conf
echo "Test number? (CR for all, ctrl-C if none)"
read TESTS
echo Running tests...
if [ z$TESTS == z ]
then
	TESTS="[0-9][0-9]"
fi
for file in Tests/Base/example${TESTS}_*.py
do
	echo
        echo ====================================================================
        echo "                          "$file
        echo ====================================================================

	python $file
	echo "Continue?"
	read x
done

echo
echo =================
echo All Done.
echo =================
